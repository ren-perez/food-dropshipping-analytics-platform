{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.9", "generated_at": "2025-08-28T02:55:45.931692Z", "invocation_id": "02bdfdd5-ec99-40a4-9c09-5929eaac2a4c", "invocation_started_at": "2025-08-28T02:55:44.406468Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.621491Z", "completed_at": "2025-08-28T02:55:45.627997Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.627997Z", "completed_at": "2025-08-28T02:55:45.628997Z"}], "thread_id": "main", "execution_time": 0.007506, "adapter_response": {}, "message": "food_dropship_analytics.on-run-start.0 passed", "failures": 0, "unique_id": "operation.food_dropship_analytics.food_dropship_analytics-on-run-start-0", "compiled": true, "compiled_code": "create schema if not exists raw", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.629996Z", "completed_at": "2025-08-28T02:55:45.630996Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.631997Z", "completed_at": "2025-08-28T02:55:45.632996Z"}], "thread_id": "main", "execution_time": 0.003, "adapter_response": {}, "message": "food_dropship_analytics.on-run-start.1 passed", "failures": 0, "unique_id": "operation.food_dropship_analytics.food_dropship_analytics-on-run-start-1", "compiled": true, "compiled_code": "create schema if not exists staging", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.632996Z", "completed_at": "2025-08-28T02:55:45.634997Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.634997Z", "completed_at": "2025-08-28T02:55:45.634997Z"}], "thread_id": "main", "execution_time": 0.002001, "adapter_response": {}, "message": "food_dropship_analytics.on-run-start.2 passed", "failures": 0, "unique_id": "operation.food_dropship_analytics.food_dropship_analytics-on-run-start-2", "compiled": true, "compiled_code": "create schema if not exists core", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.636501Z", "completed_at": "2025-08-28T02:55:45.637506Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.638506Z", "completed_at": "2025-08-28T02:55:45.639506Z"}], "thread_id": "main", "execution_time": 0.003005, "adapter_response": {}, "message": "food_dropship_analytics.on-run-start.3 passed", "failures": 0, "unique_id": "operation.food_dropship_analytics.food_dropship_analytics-on-run-start-3", "compiled": true, "compiled_code": "create schema if not exists marts", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.644505Z", "completed_at": "2025-08-28T02:55:45.647013Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.647013Z", "completed_at": "2025-08-28T02:55:45.694046Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.050540924072265625, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.food_dropship_analytics.raw_posthog_events", "compiled": true, "compiled_code": "\n\nselect *\nfrom read_parquet('../data/raw/posthog/*/*/*/*.parquet')", "relation_name": "\"warehouse\".\"main_staging\".\"raw_posthog_events\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.698554Z", "completed_at": "2025-08-28T02:55:45.700553Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.700553Z", "completed_at": "2025-08-28T02:55:45.714657Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018103837966918945, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.food_dropship_analytics.stg_posthog_events", "compiled": true, "compiled_code": "\n\nwith base as (\n    select\n        cast(distinct_id as varchar)          as user_id,\n        cast(event as varchar)                as event_name,\n        cast(timestamp as timestamp)          as event_time,\n        /* properties is a JSON string; extract safely */\n        json_extract_string(properties, '$.\"$current_url\"')      as url,\n        json_extract_string(properties, '$.product_id')          as product_id,\n        json_extract_string(properties, '$.campaign')            as campaign,\n        json_extract_string(properties, '$.region')              as region,\n        json_extract_string(properties, '$.order_id')            as order_id,\n        /* numeric fields for orders (if present) */\n        try_cast(json_extract_string(properties, '$.price') as double)     as price,\n        try_cast(json_extract_string(properties, '$.quantity') as int)     as quantity,\n        try_cast(json_extract_string(properties, '$.amount') as double)     as amount\n    from \"warehouse\".\"main_staging\".\"raw_posthog_events\"\n),\n\n-- Normalize event names used by the funnel (your app should send these)\nmapped as (\n    select\n        *,\n        case\n            when event_name in ('homepage_view', '$pageview') then 'homepage_view'\n            when event_name = 'product_view'                  then 'product_view'\n            when event_name = 'add_to_cart'                   then 'add_to_cart'\n            when event_name = 'checkout_started'              then 'checkout_started'\n            when event_name in ('purchase', 'order_completed') then 'purchase'\n            else 'other'\n        end as event_standard\n    from base\n)\n\nselect * from mapped", "relation_name": "\"warehouse\".\"main_staging\".\"stg_posthog_events\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.734195Z", "completed_at": "2025-08-28T02:55:45.750213Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.750213Z", "completed_at": "2025-08-28T02:55:45.764740Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.05013251304626465, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.food_dropship_analytics.not_null_stg_posthog_events_user_id.af99c900a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"warehouse\".\"main_staging\".\"stg_posthog_events\"\nwhere user_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.720689Z", "completed_at": "2025-08-28T02:55:45.736699Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.737706Z", "completed_at": "2025-08-28T02:55:45.765742Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0511319637298584, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.food_dropship_analytics.accepted_values_stg_posthog_events_event_standard__homepage_view__product_view__add_to_cart__checkout_started__purchase__other.99c1456a36", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_standard as value_field,\n        count(*) as n_records\n\n    from \"warehouse\".\"main_staging\".\"stg_posthog_events\"\n    group by event_standard\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'homepage_view','product_view','add_to_cart','checkout_started','purchase','other'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.730196Z", "completed_at": "2025-08-28T02:55:45.737706Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.747208Z", "completed_at": "2025-08-28T02:55:45.766742Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0511326789855957, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.food_dropship_analytics.not_null_stg_posthog_events_event_time.58d9ab0eed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_time\nfrom \"warehouse\".\"main_staging\".\"stg_posthog_events\"\nwhere event_time is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.773823Z", "completed_at": "2025-08-28T02:55:45.775823Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.775823Z", "completed_at": "2025-08-28T02:55:45.810984Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03916192054748535, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.food_dropship_analytics.fact_events", "compiled": true, "compiled_code": "\n\nwith enriched as (\n    select\n        user_id,\n        event_time,\n        event_standard as event_name,\n        url,\n        product_id,\n        campaign,\n        region,\n        order_id,\n        price,\n        quantity,\n        amount,\n        case event_standard\n            when 'homepage_view'   then 1\n            when 'product_view'    then 2\n            when 'add_to_cart'     then 3\n            when 'checkout_started' then 4\n            when 'purchase'        then 5\n            else null\n        end as funnel_step,\n        /* line_revenue: prefer explicit amount; else price*qty */\n        coalesce(amount, price * nullif(quantity,0)) as line_revenue\n    from \"warehouse\".\"main_staging\".\"stg_posthog_events\"\n)\n\nselect *\nfrom enriched", "relation_name": "\"warehouse\".\"main_core\".\"fact_events\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.818495Z", "completed_at": "2025-08-28T02:55:45.826997Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.826997Z", "completed_at": "2025-08-28T02:55:45.866527Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05363774299621582, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.food_dropship_analytics.fact_orders", "compiled": true, "compiled_code": "\n\nwith purchases as (\n    select *\n    from \"warehouse\".\"main_core\".\"fact_events\"\n    where event_name = 'purchase'\n),\n\norders as (\n    select\n        order_id,\n        min(event_time) as order_time,\n        any_value(user_id) as user_id,\n        /* sum all lines for the order */\n        sum(coalesce(line_revenue, 0)) as order_revenue,\n        sum(coalesce(quantity, 0))     as total_items,\n        max(campaign)                  as campaign,   -- choose any consistent rule\n        max(region)                    as region\n    from purchases\n    where order_id is not null\n    group by order_id\n)\n\nselect * from orders", "relation_name": "\"warehouse\".\"main_core\".\"fact_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.814984Z", "completed_at": "2025-08-28T02:55:45.823495Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.823495Z", "completed_at": "2025-08-28T02:55:45.867622Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.05363774299621582, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.food_dropship_analytics.dim_date", "compiled": true, "compiled_code": "\n\nwith bounds as (\n    select\n        date_trunc('day', min(event_time)) as start_date,\n        date_trunc('day', max(event_time)) as end_date\n    from \"warehouse\".\"main_core\".\"fact_events\"\n),\ncalendar as (\n    select\n        d::date as date_day\n    from bounds,\n         generate_series(start_date, end_date, interval 1 day) as t(d)\n)\n\nselect\n  date_day,\n  extract(year  from date_day)::int as year,\n  extract(quarter from date_day)::int as quarter,\n  extract(month from date_day)::int as month,\n  extract(day   from date_day)::int as day,\n  extract(dow   from date_day)::int as day_of_week,\n  strftime(date_day, '%A')          as day_name,\n  strftime(date_day, '%Y-%m')       as year_month\nfrom calendar\norder by date_day", "relation_name": "\"warehouse\".\"main_core\".\"dim_date\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.820495Z", "completed_at": "2025-08-28T02:55:45.826997Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.828999Z", "completed_at": "2025-08-28T02:55:45.870621Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.056638240814208984, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.food_dropship_analytics.funnel_conversion", "compiled": true, "compiled_code": "\n\nwith steps as (\n    select funnel_step, count(distinct user_id) as users\n    from \"warehouse\".\"main_core\".\"fact_events\"\n    where funnel_step is not null\n    group by funnel_step\n),\nordered as (\n    select\n      funnel_step,\n      users,\n      lag(users) over (order by funnel_step) as prev_users,\n      first_value(users) over (order by funnel_step) as first_users\n    from steps\n)\n\nselect\n  funnel_step,\n  users,\n  prev_users,\n  round(100.0 * users / nullif(prev_users,0), 2) as step_conversion_rate,\n  round(100.0 * users / nullif(first_users,0), 2) as total_conversion_rate\nfrom ordered\norder by funnel_step", "relation_name": "\"warehouse\".\"main_marts\".\"funnel_conversion\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.875622Z", "completed_at": "2025-08-28T02:55:45.884706Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.884706Z", "completed_at": "2025-08-28T02:55:45.896764Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02765512466430664, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.food_dropship_analytics.not_null_fact_orders_order_id.6ba6d3f0a0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"warehouse\".\"main_core\".\"fact_orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.880705Z", "completed_at": "2025-08-28T02:55:45.886708Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.886708Z", "completed_at": "2025-08-28T02:55:45.898273Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027652978897094727, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.food_dropship_analytics.unique_fact_orders_order_id.93a68b4064", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"warehouse\".\"main_core\".\"fact_orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.877707Z", "completed_at": "2025-08-28T02:55:45.886708Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.888765Z", "completed_at": "2025-08-28T02:55:45.900277Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02865290641784668, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.food_dropship_analytics.not_null_fact_orders_order_revenue.7129d31d25", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_revenue\nfrom \"warehouse\".\"main_core\".\"fact_orders\"\nwhere order_revenue is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-28T02:55:45.905780Z", "completed_at": "2025-08-28T02:55:45.908026Z"}, {"name": "execute", "started_at": "2025-08-28T02:55:45.908026Z", "completed_at": "2025-08-28T02:55:45.925535Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02125835418701172, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.food_dropship_analytics.daily_sales", "compiled": true, "compiled_code": "\n\nselect\n  date_trunc('day', order_time)::date as date_day,\n  count(distinct order_id)           as orders,\n  sum(order_revenue)                 as gross_revenue\nfrom \"warehouse\".\"main_core\".\"fact_orders\"\ngroup by 1\norder by 1", "relation_name": "\"warehouse\".\"main_marts\".\"daily_sales\"", "batch_results": null}], "elapsed_time": 0.5170063972473145, "args": {"select": [], "show_resource_report": false, "which": "build", "write_json": true, "require_resource_names_without_spaces": true, "print": true, "state_modified_compare_more_unrendered_values": false, "favor_state": false, "log_format_file": "debug", "require_generic_test_arguments_property": true, "version_check": true, "indirect_selection": "eager", "cache_selected_only": false, "introspect": true, "validate_macro_args": false, "show": false, "log_format": "default", "require_nested_cumulative_type_params": false, "log_file_max_bytes": 10485760, "log_path": "C:\\Users\\renat\\9. Saturn\\2. Projects\\food-dropship-analytics\\dbt\\logs", "macro_debugging": false, "project_dir": "C:\\Users\\renat\\9. Saturn\\2. Projects\\food-dropship-analytics\\dbt", "show_all_deprecations": false, "static_parser": true, "partial_parse_file_diff": true, "skip_nodes_if_on_run_start_fails": false, "log_level_file": "debug", "invocation_command": "dbt build", "exclude_resource_types": [], "printer_width": 80, "state_modified_compare_vars": false, "upload_to_artifacts_ingest_api": false, "use_colors": true, "empty": false, "exclude": [], "profiles_dir": "C:\\Users\\renat\\9. Saturn\\2. Projects\\food-dropship-analytics\\dbt", "send_anonymous_usage_stats": true, "populate_cache": true, "source_freshness_run_project_hooks": true, "partial_parse": true, "log_level": "info", "use_fast_test_edges": false, "quiet": false, "vars": {}, "warn_error_options": {"error": [], "warn": [], "silence": []}, "include_saved_query": false, "require_all_warnings_handled_by_warn_error": false, "export_saved_queries": false, "require_batched_execution_for_custom_microbatch_strategy": false, "defer": false, "use_colors_file": true, "require_explicit_package_overrides_for_builtin_materializations": true, "strict_mode": false, "require_yaml_configuration_for_mf_time_spines": false, "resource_types": []}}